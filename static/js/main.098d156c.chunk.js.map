{"version":3,"sources":["AddCard/AddCard.js","AddCard/AddCardConnector.js","actions.js","Cards/Items/Todo.js","AddTodo/AddTodo.js","AddTodo/AddTodoConnector.js","Cards/CardItem.js","Cards/CardItemConnector.js","Cards/Cards.js","Cards/CardsConnector.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["MyButton","styled","Button","backgroundColor","color","width","MyFab","Fab","boxShadow","AddCard","_ref","onCardAdd","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","slide","setSlide","input","React","createRef","react_default","a","createElement","style","alignSelf","onKeyPress","e","key","trim","length","onClick","setTimeout","document","getElementById","focus","fullWidth","Slide","direction","in","Paper","Input","id","inputRef","onChange","target","autoFocus","size","AddCardConnector","connect","dispatch","text","type","addCard","Todo","cardIndex","todoIndex","editing","onDelete","onEdit","todoText","setTodoText","html","disabledUnderline","ListItemText","primary","ListItem","index","concat","Todo_MyFab","class","AddTodo","onTodoAdd","setText","variant","AddTodoConnector","state","ownProps","addTodo","MyCard","Card","padding","minWidth","CardItem","todos","AddTodo_AddTodoConnector","List","map","todo","indx","Items_Todo","Math","random","toString","substring","CardItemConnector","cards","toggleEditTodo","useStyles","makeStyles","gridList","display","flexFlow","justifyContent","alignItems","Cards","classes","GridList","className","item","Cards_CardItemConnector","CardsConnector","App","Grid","container","justify","name","Cards_CardsConnector","AddCard_AddCardConnector","Boolean","window","location","hostname","match","initialState","store","createStore","arguments","undefined","action","assign","toConsumableArray","card","render","ReactDOM","es","src_App_0","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.098d156c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { styled } from '@material-ui/styles'\r\nimport './add.css'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Input from '@material-ui/core/Input'\r\nimport Fab   from '@material-ui/core/Fab'\r\n\r\nconst MyButton = styled(Button)({\r\n  backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n  color: \"#fff\",\r\n  width: \"150px\"\r\n})\r\n\r\nconst MyFab = styled(Fab)({\r\n  boxShadow: 'none'\r\n})\r\n\r\nconst AddCard = ({ onCardAdd }) => {\r\n\r\n  const [value, setValue] = useState('')\r\n  const [slide, setSlide] = useState(false)\r\n\r\n  const input = React.createRef()\r\n\r\n  return (\r\n    <div \r\n      style={{alignSelf: \"center\"}} \r\n      onKeyPress={(e => {\r\n        if(e.key === 'Enter' && value.trim().length === 0) {\r\n          setSlide(false)\r\n        }\r\n      })}\r\n    >\r\n      <MyButton\r\n        onClick={() => {\r\n          setSlide(true)\r\n          setTimeout(() => {\r\n            document.getElementById('input').focus()\r\n          }, 100)\r\n      }}\r\n        fullWidth\r\n      > \r\n        + ADD CARD\r\n      </MyButton>\r\n      <Slide \r\n        direction=\"down\" \r\n        in={slide} \r\n      >\r\n      <Paper \r\n        onKeyPress={e => {\r\n          if(e.key === 'Enter' && value.trim().length !== 0) {\r\n            setSlide(false)\r\n            onCardAdd(value)\r\n            setValue('')\r\n          }\r\n        }}\r\n      >\r\n        <Input\r\n          id=\"input\"\r\n          inputRef={input}\r\n          value={value} \r\n          onChange={e => setValue(e.target.value)} \r\n          autoFocus={slide}\r\n        />\r\n        <MyFab \r\n          size=\"small\" \r\n          onClick={() => {\r\n            if(value.trim().length !== 0) {\r\n            setSlide(false)\r\n            onCardAdd(value)\r\n            setValue('')\r\n            } else {\r\n              setSlide(false)\r\n            }\r\n          }}\r\n        > \r\n          + \r\n        </MyFab>\r\n      </Paper>\r\n    </Slide>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCard","import { connect } from 'react-redux'\r\nimport { addCard } from '../actions'\r\nimport AddCard from './AddCard'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCardAdd: text => dispatch(addCard(text))\r\n  }\r\n}\r\n\r\nconst AddCardConnector = connect(null, mapDispatchToProps)(AddCard)\r\n\r\nexport default AddCardConnector","export const addCard =  text => {\r\n  return {\r\n    type: 'ADD_CARD',\r\n    text,\r\n  }\r\n}\r\n\r\nexport const addTodo = (index, text) => {\r\n  return {\r\n    type: 'ADD_TODO',\r\n    index,\r\n    text\r\n  }\r\n}\r\n\r\nexport const toggleEditTodo = (cardIndex, todoIndex, todoText) => {\r\n  return {\r\n    type: 'TOGGLE_EDIT_TODO',\r\n    cardIndex,\r\n    todoIndex,\r\n    todoText\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { styled } from '@material-ui/core/styles'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Input from '@material-ui/core/Input'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nconst MyFab = styled(Fab)({\r\n  boxShadow: 'none'\r\n})\r\n\r\nconst Todo = ({ text, cardIndex, todoIndex, onDelete, editing, onEdit }) => {\r\n\r\n  const [todoText, setTodoText] = useState(text)\r\n\r\n  const html = editing ?\r\n    <Input \r\n      onChange={e => setTodoText(e.target.value)} \r\n      value={todoText}\r\n      autoFocus \r\n      disabledUnderline \r\n    />\r\n    :\r\n    <ListItemText primary={text} />\r\n\r\n  return (\r\n    <ListItem index={todoIndex} onKeyPress={e => {\r\n      if(e.key === 'Enter' && todoText.trim() !== 0) {\r\n        onEdit(cardIndex, todoIndex, todoText)\r\n      }\r\n    }}>\r\n      <ListItemText primary={`${todoIndex + 1}.`} />\r\n      { html }\r\n      <MyFab \r\n        size=\"small\" \r\n        color=\"secondary\"\r\n        onClick={() => onEdit(cardIndex, todoIndex, todoText)}\r\n      >\r\n        <i class=\"material-icons\">\r\n          edit\r\n        </i>\r\n      </MyFab>\r\n      <MyFab size=\"small\"> \r\n        <i class=\"material-icons\">\r\n          delete\r\n        </i>  \r\n      </MyFab>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\n\r\nconst AddTodo = ({ index, onTodoAdd }) => {\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <div onKeyPress={e => {\r\n      if(e.key === 'Enter' && text.trim().length !== 0) {\r\n        onTodoAdd(index, text)\r\n      }\r\n    }}\r\n    >\r\n      <Input onChange={e => setText(e.target.value)} autoFocus />\r\n      <Button \r\n      variant=\"outlined\" \r\n      color=\"primary\" \r\n      onClick={() => {\r\n        if(text.trim().length !== 0 ) {\r\n          onTodoAdd(index, text)\r\n        }\r\n      }}\r\n      > \r\n        add \r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTodo","import { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nimport AddTodo from './AddTodo'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    index: ownProps.index\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTodoAdd: (index, text) => dispatch(addTodo(index, text))\r\n  }\r\n}\r\n\r\nconst AddTodoConnector = connect(mapStateToProps, mapDispatchToProps)(AddTodo)\r\n\r\nexport default AddTodoConnector","import React from 'react'\r\nimport { styled } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport List from '@material-ui/core/List'\r\nimport Todo from './Items/Todo'\r\nimport AddTodoConnector from '../AddTodo/AddTodoConnector'\r\n\r\nconst MyCard = styled(Card)({\r\n  padding: '20px 10px',\r\n  minWidth: '200px',\r\n})\r\n\r\nconst generateID = () => {\r\n  return Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nconst CardItem = ({ index, text, todos, onEdit }) => {\r\n  return (\r\n    <MyCard index={index}>\r\n      <h3> { text } </h3>\r\n      <hr />\r\n      <AddTodoConnector index={index} />\r\n      <hr />\r\n      <List>\r\n        {todos.map((todo, indx) => <Todo \r\n          cardIndex={index}\r\n          key={generateID()} \r\n          onEdit={onEdit} \r\n          editing={todo.editing} \r\n          text={todo.text} \r\n          todoIndex={indx} \r\n        />\r\n        )}\r\n      </List>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default CardItem","import { connect } from 'react-redux'\r\nimport { toggleEditTodo } from '../actions'\r\n\r\nimport CardItem from './CardItem'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    index: ownProps.index,\r\n    text:  ownProps.text,\r\n    todos: state.cards[ownProps.index].todos,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onEdit: (cardIndex, todoIndex, todoText) => dispatch(toggleEditTodo(cardIndex, todoIndex, todoText))\r\n  }\r\n}\r\n\r\nconst CardItemConnector = connect(mapStateToProps, mapDispatchToProps)(CardItem)\r\n\r\nexport default CardItemConnector","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport CardItemConnector from './CardItemConnector'\r\nimport GridList from '@material-ui/core/GridList'\r\n\r\nconst genereteID = () => {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridList: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'flex-start'\r\n  }\r\n})) \r\n\r\nconst Cards = ({ cards }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <GridList className={classes.gridList}>\r\n      {cards.map((item, index) => <CardItemConnector key={genereteID()} index={index} text={item.text} />)}\r\n    </GridList>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import { connect } from 'react-redux'\r\nimport Cards from './Cards'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cards: state.cards\r\n  }\r\n}\r\n\r\nconst CardsConnector = connect(mapStateToProps, null)(Cards)\r\n\r\nexport default CardsConnector","import React from 'react';\nimport './App.css';\nimport AddCardConnector from './AddCard/AddCardConnector'\nimport Grid from '@material-ui/core/Grid'\nimport CardsConnector from './Cards/CardsConnector'\n\n\n\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <div name=\"cards\">\n          <CardsConnector />\n        </div>\n        <AddCardConnector />\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nexport const app = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_CARD':\r\n      return Object.assign({}, state, {\r\n        cards: [\r\n          ...state.cards,\r\n          {\r\n            text: action.text ,\r\n            todos: []\r\n          }\r\n        ]\r\n      })\r\n    case 'ADD_TODO': \r\n      /* \r\n        In this case i check whether or not particular card's index is equal to map-index \r\n        and if it is, i return this card and add to his \"todos\" property new \"todo\" item,\r\n        which text is taken from action.text\r\n      */\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.index) {\r\n            return Object.assign({}, card, {\r\n              todos: [\r\n                ...state.cards[cardIndex].todos,\r\n                {\r\n                  editing: false,\r\n                  text: action.text\r\n                }\r\n              ]\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'TOGGLE_EDIT_TODO':\r\n      /*\r\n        In this case i check whether or not cardIndex equals action.cardIndex\r\n          1) if it's true,\r\n             i continue and return new Object\r\n             in which i return all card's property but change\r\n             \"todos\" property. After it i check whether or not \r\n             todoIndex equals action.todoIndex and if it's true\r\n             i return new Object with all todo's properties but \r\n             inverted \"editing\" property and changed \"text\" property\r\n             which value is taken from action.todoText\r\n\r\n             If todoIndex doesn't equal action.todoIndex i return\r\n             existing todo object             \r\n\r\n          2) if it's not i return card  \r\n      */\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.cardIndex) {\r\n            // Checking card's index and action's card index\r\n            return Object.assign({}, card, {\r\n              // (true), returning new card Object with all its existing\r\n              // properties but changing \"todos\" property\r\n              \r\n              // mapping through \"todos\" property which is an array of todo objects\r\n              todos: state.cards[cardIndex].todos.map((todo, todoIndex) => {\r\n                if(todoIndex === action.todoIndex) {\r\n                  // (true), returning new todo Object with all its existing\r\n                  // properties, but inverting its \"editing\" property (bool) and\r\n                  // setting to a \"text\" property value from action.todoText,\r\n                  // which has EDITED text from Todo component\r\n                  return Object.assign({}, todo, {\r\n                    editing: !todo.editing,\r\n                    text: action.todoText\r\n                  })\r\n                } else {\r\n                  return Object.assign({}, todo, {\r\n                    editing: false\r\n                  })\r\n                }\r\n              })\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nconst initialState = {\r\n  cards: []\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport {app} from './reducers'\n\nconst store = createStore(app)\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    , \n    document.getElementById('root')\n  )  \n}\n\nstore.subscribe(render)\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}