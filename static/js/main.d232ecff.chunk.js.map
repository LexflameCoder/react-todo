{"version":3,"sources":["actions.js","AddCard/AddCard.js","AddCard/AddCardConnector.js","Cards/Items/Todo.js","AddTodo/AddTodo.js","AddTodo/AddTodoConnector.js","Cards/CardItem.js","Cards/CardItemConnector.js","Cards/Cards.js","Cards/CardsConnector.js","Checklist/AddCheckPoint.js","Checklist/AddCheckPointConnector.js","Checklist/CheckPoint.js","Checklist/Checklist.js","Checklist/ChecklistPopup.js","Checklist/ChecklistPopupConnector.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["hideChecklist","type","MyButton","styled","Button","backgroundColor","color","width","MyFab","Fab","boxShadow","AddCard","_ref","onCardAdd","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","slide","setSlide","input","React","createRef","react_default","a","createElement","style","alignSelf","onKeyPress","e","key","trim","length","onClick","setTimeout","document","getElementById","focus","fullWidth","Slide","direction","in","Paper","Input","id","inputRef","onChange","target","autoFocus","size","AddCardConnector","connect","dispatch","text","addCard","MyListItem","ListItem","concat","props","backgroundcolor","Todo","cardIndex","todoIndex","points","onDelete","editing","onEdit","todoText","setTodoText","html","name","ListItemText","primary","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","assign","draggableProps","innerRef","isdragging","isDragging","toString","getAttribute","button","dragHandleProps","height","marginRight","borderRadius","Todo_MyFab","className","AddTodo","onTodoAdd","setText","variant","AddTodoConnector","state","ownProps","addTodo","MyCard","Card","padding","minWidth","CardItem","todos","showChecklist","AddTodo_AddTodoConnector","droppableId","List","droppableProps","map","todo","indx","Items_Todo","placeholder","CardItemConnector","cards","toggleEditTodo","deleteTodo","todoTitle","useStyles","makeStyles","gridList","display","flexFlow","justifyContent","alignItems","Cards","classes","GridList","item","Cards_CardItemConnector","CardsConnector","AddCheckPoint","AddCheckPointConnector","checklist","addCheckPoint","CheckPoint","Checklist","useEffect","console","log","point","Checklist_CheckPoint","styles","position","top","left","right","bottom","zIndex","transform","maxWidth","minHeight","CheckListPopup","headline","hidden","ChecklistPopup_MyCard","Checklist_AddCheckPointConnector","src_Checklist_Checklist","ChecklistPopupConnector","ChecklistPopup","App","onDragEnd","result","cardId","todoId","sourceIndex","destinationIndex","source","destination","Checklist_ChecklistPopupConnector","Grid","container","justify","Cards_CardsConnector","AddCard_AddCardConnector","Boolean","window","location","hostname","match","generateID","start","end","Math","random","substring","randomCardKey","chars","split","floor","str","i","randomKey","replace","substr","initialState","undefined","store","createStore","arguments","action","toConsumableArray","card","slice","newTodos","Array","from","splice","objectSpread","render","ReactDOM","es","src_App_0","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d232ecff.chunk.js","sourcesContent":["export const addCard =  text => {\r\n  return {\r\n    type: 'ADD_CARD',\r\n    text,\r\n  }\r\n}\r\n\r\nexport const addTodo = (index, text) => {\r\n  return {\r\n    type: 'ADD_TODO',\r\n    index,\r\n    text\r\n  }\r\n}\r\n\r\nexport const addCheckPoint = (cardIndex, todoIndex, text) => {\r\n  return {\r\n    type: 'ADD_CHECK_POINT',\r\n    cardIndex,\r\n    todoIndex,\r\n    text\r\n  }\r\n}\r\n\r\nexport const toggleEditTodo = (cardIndex, todoIndex, todoText) => {\r\n  return {\r\n    type: 'TOGGLE_EDIT_TODO',\r\n    cardIndex,\r\n    todoIndex,\r\n    todoText\r\n  }\r\n}\r\n\r\nexport const deleteTodo = (cardIndex, todoIndex) => {\r\n  return {\r\n    type: 'DELETE_TODO',\r\n    cardIndex, \r\n    todoIndex\r\n  }\r\n}\r\n\r\nexport const dropTodo = (cardId, todoId, sourceIndex, destinationIndex) => {\r\n  return {\r\n    type: 'DROP_TODO',\r\n    cardId,\r\n    todoId,\r\n    sourceIndex,\r\n    destinationIndex\r\n  }\r\n}\r\n\r\nexport const showChecklist = (cardIndex, todoIndex, todoTitle, points) => {\r\n  return {\r\n    type: 'SHOW_CHECKLIST',\r\n    cardIndex, \r\n    todoIndex,\r\n    todoTitle,\r\n    points : points,\r\n  }\r\n}\r\n\r\nexport const hideChecklist = () => {\r\n  return {\r\n    type: 'HIDE_CHECKLIST'\r\n  }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { styled } from '@material-ui/styles'\r\nimport './add.css'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Input from '@material-ui/core/Input'\r\nimport Fab   from '@material-ui/core/Fab'\r\n\r\nconst MyButton = styled(Button)({\r\n  backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n  color: \"#fff\",\r\n  width: \"150px\"\r\n})\r\n\r\nconst MyFab = styled(Fab)({\r\n  boxShadow: 'none'\r\n})\r\n\r\nconst AddCard = ({ onCardAdd }) => {\r\n\r\n  const [value, setValue] = useState('')\r\n  const [slide, setSlide] = useState(false)\r\n\r\n  const input = React.createRef()\r\n\r\n  return (\r\n    <div \r\n      style={{alignSelf: \"center\"}} \r\n      onKeyPress={(e => {\r\n        if(e.key === 'Enter' && value.trim().length === 0) {\r\n          setSlide(false)\r\n        }\r\n      })}\r\n    >\r\n      <MyButton\r\n        onClick={() => {\r\n          setSlide(true)\r\n          setTimeout(() => {\r\n            document.getElementById('input').focus()\r\n          }, 100)\r\n      }}\r\n        fullWidth\r\n      > \r\n        + ADD CARD\r\n      </MyButton>\r\n      <Slide \r\n        direction=\"down\" \r\n        in={slide} \r\n      >\r\n      <Paper \r\n        onKeyPress={e => {\r\n          if(e.key === 'Enter' && value.trim().length !== 0) {\r\n            setSlide(false)\r\n            onCardAdd(value)\r\n            setValue('')\r\n          }\r\n        }}\r\n      >\r\n        <Input\r\n          id=\"input\"\r\n          inputRef={input}\r\n          value={value} \r\n          onChange={e => setValue(e.target.value)} \r\n          autoFocus={slide}\r\n        />\r\n        <MyFab \r\n          size=\"small\" \r\n          onClick={() => {\r\n            if(value.trim().length !== 0) {\r\n            setSlide(false)\r\n            onCardAdd(value)\r\n            setValue('')\r\n            } else {\r\n              setSlide(false)\r\n            }\r\n          }}\r\n        > \r\n          + \r\n        </MyFab>\r\n      </Paper>\r\n    </Slide>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCard","import { connect } from 'react-redux'\r\nimport { addCard } from '../actions'\r\nimport AddCard from './AddCard'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCardAdd: text => dispatch(addCard(text))\r\n  }\r\n}\r\n\r\nconst AddCardConnector = connect(null, mapDispatchToProps)(AddCard)\r\n\r\nexport default AddCardConnector","import React, { useState } from 'react'\r\nimport { styled } from '@material-ui/core/styles'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Input from '@material-ui/core/Input'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nconst MyFab = styled(Fab)({\r\n  boxShadow: 'none'\r\n})\r\n\r\nconst MyListItem = styled(ListItem)({\r\n  backgroundColor: `${props => props.backgroundcolor}`\r\n})\r\n\r\nconst Todo = ({ id, text, cardIndex, todoIndex, points, onDelete, editing, onEdit, onClick }) => {\r\n\r\n  const [todoText, setTodoText] = useState(text)\r\n\r\n  const html = editing ?\r\n    <Input \r\n      name=\"list-input\"\r\n      onChange={e => setTodoText(e.target.value)} \r\n      value={todoText}\r\n      autoFocus \r\n    />\r\n    :\r\n    <ListItemText name=\"list-text\" primary={todoText} />\r\n\r\n  return (\r\n    <Draggable draggableId={id} index={todoIndex}>\r\n      {(provided, snapshot) => (\r\n        <MyListItem \r\n          name=\"list-item\"\r\n          {...provided.draggableProps}\r\n          innerRef={provided.innerRef}\r\n          index={todoIndex} \r\n          isdragging={snapshot.isDragging.toString()}\r\n          backgroundcolor=\"lightgreen\"\r\n          onKeyPress={e => {\r\n            if(e.key === 'Enter' && todoText.trim() !== 0) {\r\n              onEdit(cardIndex, todoIndex, todoText)\r\n            }\r\n          }}\r\n          onClick={e => {\r\n            if(e.target.getAttribute('name') === 'list-item'  ||\r\n               e.target.getAttribute('name') === 'list-input' ||\r\n               e.target.getAttribute('name') === 'list-text') {\r\n              onClick(cardIndex, todoIndex, todoText, points)\r\n            }\r\n          }}\r\n          button\r\n        >\r\n          <div {...provided.dragHandleProps} style={{\r\n            width: '24px',\r\n            height: '24px',\r\n            marginRight: '10px',\r\n            borderRadius: '20%',\r\n            backgroundColor: '#E66F00'\r\n          }}\r\n          ></div>\r\n          { html }\r\n          <MyFab \r\n            size=\"small\" \r\n            color=\"secondary\"\r\n            onClick={() => onEdit(cardIndex, todoIndex, todoText)}\r\n          >\r\n            <i className=\"material-icons\">\r\n              edit\r\n            </i>\r\n          </MyFab>\r\n          <MyFab \r\n            size=\"small\"\r\n            onClick={() => onDelete(cardIndex, todoIndex)}\r\n          > \r\n            <i className=\"material-icons\">\r\n              delete\r\n            </i>  \r\n          </MyFab>\r\n        </MyListItem>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\n\r\nconst AddTodo = ({ index, onTodoAdd }) => {\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <div onKeyPress={e => {\r\n      if(e.key === 'Enter' && text.trim().length !== 0) {\r\n        onTodoAdd(index, text)\r\n        setText('')\r\n      }\r\n    }}\r\n    >\r\n      <Input onChange={e => setText(e.target.value)} value={text} autoFocus />\r\n      <Button \r\n        variant=\"outlined\" \r\n        color=\"primary\" \r\n        onClick={() => {\r\n          if(text.trim().length !== 0 ) {\r\n            onTodoAdd(index, text)\r\n            setText('')\r\n          }\r\n        }}\r\n      > \r\n        add \r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTodo","import { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nimport AddTodo from './AddTodo'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    index: ownProps.index\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTodoAdd: (index, text) => dispatch(addTodo(index, text))\r\n  }\r\n}\r\n\r\nconst AddTodoConnector = connect(mapStateToProps, mapDispatchToProps)(AddTodo)\r\n\r\nexport default AddTodoConnector","import React from 'react'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\nimport { styled } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport List from '@material-ui/core/List'\r\nimport Todo from './Items/Todo'\r\nimport AddTodoConnector from '../AddTodo/AddTodoConnector'\r\n\r\nconst MyCard = styled(Card)({\r\n  padding: '5px 15px 20px',\r\n  minWidth: '200px',\r\n})\r\n\r\nconst CardItem = ({ id, index, text, todos, onEdit, onDelete, showChecklist }) => {\r\n  return (\r\n    <MyCard index={index}>\r\n      <h3> { text } </h3>\r\n      <hr />\r\n      <AddTodoConnector index={index} />\r\n      <hr />\r\n      <Droppable droppableId={id}>\r\n        {(provided) => (\r\n          <List\r\n            {...provided.droppableProps}\r\n            innerRef={provided.innerRef}\r\n          >\r\n            {todos.map((todo, indx) => <Todo \r\n              cardIndex={index}\r\n              key={todo.key} \r\n              id={todo.id}\r\n              points={todo.points}\r\n              onEdit={onEdit} \r\n              onDelete={onDelete}\r\n              editing={todo.editing} \r\n              text={todo.text} \r\n              todoIndex={indx} \r\n              onClick={showChecklist}\r\n            />\r\n            )}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default CardItem","import { connect } from 'react-redux'\r\nimport { toggleEditTodo, deleteTodo, showChecklist } from '../actions'\r\n\r\nimport CardItem from './CardItem'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    index: ownProps.index,\r\n    text:  ownProps.text,\r\n    todos: state.cards[ownProps.index].todos,\r\n    id: state.cards[ownProps.index].id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onEdit: (cardIndex, todoIndex, todoText) => dispatch(toggleEditTodo(cardIndex, todoIndex, todoText)),\r\n    onDelete: (cardIndex, todoIndex) => dispatch(deleteTodo(cardIndex, todoIndex)),\r\n    showChecklist: (cardIndex, todoIndex, todoTitle, points) => dispatch(showChecklist(cardIndex, todoIndex, todoTitle, points))\r\n  }\r\n}\r\n\r\nconst CardItemConnector = connect(mapStateToProps, mapDispatchToProps)(CardItem)\r\n\r\nexport default CardItemConnector","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport CardItemConnector from './CardItemConnector'\r\nimport GridList from '@material-ui/core/GridList'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridList: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'flex-start'\r\n  }\r\n})) \r\n\r\nconst Cards = ({ cards }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <GridList className={classes.gridList}>\r\n      {cards.map((item, index) => <CardItemConnector key={item.key} index={index} text={item.text} />)}\r\n    </GridList>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import { connect } from 'react-redux'\r\nimport Cards from './Cards'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cards: state.cards\r\n  }\r\n}\r\n\r\nconst CardsConnector = connect(mapStateToProps, null)(Cards)\r\n\r\nexport default CardsConnector","import React, { useState } from 'react'\r\n\r\nimport Input from '@material-ui/core/Input'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst AddCheckPoint = ({ cardIndex, todoIndex, onClick }) => {\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  return (\r\n    <div>\r\n      <Input \r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n      />\r\n      <Button \r\n        color=\"primary\" \r\n        variant=\"contained\"\r\n        onClick={() => onClick(cardIndex, todoIndex, text)}\r\n      > \r\n      ADD POINT \r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCheckPoint","import { connect } from 'react-redux'\r\nimport { addCheckPoint } from '../actions'\r\n\r\nimport AddCheckPoint from './AddCheckPoint'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cardIndex: state.checklist.cardIndex,\r\n    todoIndex: state.checklist.todoIndex\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onClick: (cardIndex, todoIndex, text) => dispatch(addCheckPoint(cardIndex, todoIndex, text))\r\n  }\r\n}\r\n\r\nconst AddCheckPointConnector = connect(mapStateToProps, mapDispatchToProps)(AddCheckPoint)\r\n\r\nexport default AddCheckPointConnector","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nconst CheckPoint = ({ index, text }) => {\r\n  return (\r\n    <ListItem index={index}>\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default CheckPoint","import React, { useEffect } from 'react'\r\n\r\n\r\nimport List from '@material-ui/core/List'\r\nimport CheckPoint from './CheckPoint'\r\n\r\nconst Checklist = ({ points }) => {\r\n\r\n  useEffect(() => {\r\n    console.log(points)\r\n  })\r\n\r\n  return (\r\n      <List>\r\n        {points.map((point, index) => <CheckPoint key={point.key} index={index} text={point.text} />)}\r\n      </List>\r\n  )\r\n}\r\n\r\nexport default Checklist","import React, { useEffect } from 'react'\r\nimport { styled } from '@material-ui/styles'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport AddCheckPointConnector from './AddCheckPointConnector'\r\nimport Checklist from './Checklist'\r\n\r\n\r\nconst styles = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n  zIndex: 99\r\n}\r\n\r\nconst MyCard = styled(Card)({\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  maxWidth: '600px',\r\n  minHeight: '200px',\r\n  zIndex: '100'\r\n})\r\n\r\nconst CheckListPopup = ({ checklist, points, headline , hidden, hideChecklist }) => {\r\n\r\n  useEffect(() => {\r\n    console.log(checklist)\r\n  })\r\n\r\n  return (\r\n    <div \r\n      name=\"popup-wrapper\" \r\n      onClick={e => {\r\n        if(e.target.getAttribute('name') !== 'popup-wrapper') return\r\n        hideChecklist()\r\n      }} \r\n      style={styles} \r\n      className=\"container\" \r\n      hidden={hidden}\r\n    >\r\n      <MyCard>\r\n        <h4> { headline } </h4>\r\n        <AddCheckPointConnector />\r\n        <Checklist points={points} />\r\n      </MyCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckListPopup","import { connect } from 'react-redux'\r\nimport { hideChecklist } from '../actions'\r\nimport ChecklistPopup from './ChecklistPopup'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    points: state.checklist.points,\r\n    hidden : state.checklist.hidden,\r\n    headline: state.checklist.headline,\r\n    checklist: state.checklist\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideChecklist: () => dispatch(hideChecklist)\r\n  }\r\n}\r\n\r\nconst ChecklistPopupConnector = connect(mapStateToProps, mapDispatchToProps)(ChecklistPopup)\r\n\r\nexport default ChecklistPopupConnector","import React from 'react';\nimport { connect } from 'react-redux'\nimport { dropTodo } from './actions'\nimport { DragDropContext } from 'react-beautiful-dnd' \nimport './App.css';\nimport AddCardConnector from './AddCard/AddCardConnector'\nimport Grid from '@material-ui/core/Grid'\nimport CardsConnector from './Cards/CardsConnector'\nimport ChecklistPopupConnector from './Checklist/ChecklistPopupConnector'\n\n\n\n\n\nlet App = ({ dispatch }) => {\n\n  // const onDragStart = object => {\n  //   const { draggableId } = object;\n  // }\n\n  const onDragEnd = result => {\n    const { draggableId, source, destination } = result;\n    if(!destination) return;\n    if(source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n    dispatch(dropTodo(destination.droppableId, draggableId, source.index, destination.index))\n  }\n  \n  return (\n    <DragDropContext \n      // onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <div className=\"App\">\n        <ChecklistPopupConnector />\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          <div name=\"cards\">\n            <CardsConnector />\n          </div>\n          <AddCardConnector />\n        </Grid>\n      </div>\n    </DragDropContext>\n  );\n}\n\nApp = connect()(App)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport { getTodo } from './getTodo'\r\n\r\nconst generateID = (start, end) => {\r\n  return Math.random().toString(36).substring(start, end) + Math.random().toString(36).substring(start, end) +  Math.random().toString(36).substring(start, end);\r\n}\r\n\r\n\r\nconst randomCardKey = (length) => {\r\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n  if (!length) {\r\n      length = Math.floor(Math.random() * chars.length);\r\n  }\r\n\r\n  var str = '';\r\n  for (var i = 0; i < length; i++) {\r\n      str += chars[Math.floor(Math.random() * chars.length)];\r\n  }\r\n  return str;\r\n}\r\n\r\nconst randomKey = () => {\r\n  return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\r\n}\r\n\r\nexport const app = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_CARD':\r\n      return Object.assign({}, state, {\r\n        cards: [\r\n          ...state.cards,\r\n          {\r\n            id: generateID(2, 15),\r\n            key: randomCardKey(),\r\n            text: action.text ,\r\n            todos: []\r\n          }\r\n        ]\r\n      })\r\n    case 'ADD_TODO': \r\n      /* \r\n        In this case i check whether or not particular card's index is equal to map-index \r\n        and if it is, i return this card and add to his \"todos\" property new \"todo\" item,\r\n        which text is taken from action.text\r\n      */\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.index) {\r\n            return Object.assign({}, card, {\r\n              todos: [\r\n                ...state.cards[cardIndex].todos,\r\n                {\r\n                  id: generateID(3, 9),\r\n                  key: randomKey(),\r\n                  editing: false,\r\n                  text: action.text,\r\n                  points: []\r\n                }\r\n              ]\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'TOGGLE_EDIT_TODO':\r\n      /*\r\n        In this case i check whether or not cardIndex equals action.cardIndex\r\n          1) if it's true,\r\n             i continue and return new Object\r\n             in which i return all card's property but change\r\n             \"todos\" property. After it i check whether or not \r\n             todoIndex equals action.todoIndex and if it's true\r\n             i return new Object with all todo's properties but \r\n             inverted \"editing\" property and changed \"text\" property\r\n             which value is taken from action.todoText\r\n\r\n             If todoIndex doesn't equal action.todoIndex i return\r\n             existing todo object             \r\n\r\n          2) if it's not i return card  \r\n      */\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.cardIndex) {\r\n            // Checking card's index and action's card index\r\n            return Object.assign({}, card, {\r\n              // (true), returning new card Object with all its existing\r\n              // properties but changing \"todos\" property\r\n              \r\n              // mapping through \"todos\" property which is an array of todo objects\r\n              todos: state.cards[cardIndex].todos.map((todo, todoIndex) => {\r\n                if(todoIndex === action.todoIndex) {\r\n                  // (true), returning new todo Object with all its existing\r\n                  // properties, but inverting its \"editing\" property (bool) and\r\n                  // setting to a \"text\" property value from action.todoText,\r\n                  // which has EDITED text from Todo component\r\n                  return Object.assign({}, todo, {\r\n                    editing: !todo.editing,\r\n                    text: action.todoText\r\n                  })\r\n                } else {\r\n                  return Object.assign({}, todo, {\r\n                    editing: false\r\n                  })\r\n                }\r\n              })\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'DELETE_TODO':\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.cardIndex) {\r\n            return Object.assign({}, card, {\r\n              todos: [\r\n                ...state.cards[cardIndex].todos.slice(0, action.todoIndex),\r\n                ...state.cards[cardIndex].todos.slice(action.todoIndex + 1)\r\n              ]\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'DROP_TODO':\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(card.id === action.cardId) {\r\n            const newTodos = Array.from(state.cards[cardIndex].todos);\r\n\r\n            newTodos.splice(action.sourceIndex, 1);\r\n            newTodos.splice(action.destinationIndex, 0, state.cards[cardIndex].todos[action.sourceIndex])\r\n\r\n            return Object.assign({}, card, {\r\n              todos: newTodos\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'ADD_CHECK_POINT':\r\n      /* \r\n        In this case i implement an action, which adds new point of particular todo\r\n        to display it in Popup window as checklist of check-points.\r\n        As previous, i find particular card that contains particular list of todos, and add new\r\n        check-point.\r\n      */\r\n      return Object.assign({}, state, {\r\n        cards: state.cards.map((card, cardIndex) => {\r\n          if(cardIndex === action.cardIndex) {\r\n            return Object.assign({}, card, {\r\n              todos: state.cards[cardIndex].todos.map((todo, todoIndex) => {\r\n                if(todoIndex === action.todoIndex) {\r\n                  return Object.assign({}, todo, {\r\n                    points: [\r\n                      ...state.cards[cardIndex].todos[todoIndex].points,\r\n                      {\r\n                        id: generateID(3, 8),\r\n                        key: randomKey(),\r\n                        text: action.text,\r\n                        editing: false\r\n                      }\r\n                    ]\r\n                  })\r\n                } else {\r\n                  return todo\r\n                }\r\n              })\r\n            })\r\n          } else {\r\n            return card\r\n          }\r\n        })\r\n      })\r\n    case 'SHOW_CHECKLIST':\r\n      return Object.assign({}, state, {\r\n        checklist: {\r\n          ...state.checklist,\r\n          hidden: false,\r\n          cardIndex: action.cardIndex,\r\n          todoIndex: action.todoIndex,\r\n          headline: action.todoTitle,\r\n          points: action.points\r\n        }\r\n      })\r\n    case 'HIDE_CHECKLIST':\r\n      return Object.assign({}, state, {\r\n        checklist: {\r\n          ...state.checklist,\r\n          hidden: true\r\n        }\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nconst initialState = {\r\n  cards: [],\r\n  checklist: {\r\n    hidden: true,\r\n    cardIndex: undefined,\r\n    todoIndex: undefined,\r\n    headline: 'default headline',\r\n    points: []\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport {app} from './reducers'\n\nconst store = createStore(app)\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    , \n    document.getElementById('root')\n  )  \n}\n\nstore.subscribe(render)\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}